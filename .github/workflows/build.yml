name: CI

on: [ push, pull_request ]

env:
  OPAMBSVERSION: 2.1.0-alpha2
  OPAMBSROOT: .cache/.opam.cached
  OPAM12CACHE: .cache/opam1.2/cache
  # This should be identical to the value in appveyor.yml
  OPAM_REPO_SHA: 6877131f0
  OCAML_VERSION: 4.11.1

defaults:
  run:
    shell: bash

jobs:

####
# Caches
####
  ocaml-cache:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        ocamlv: [ 4.11.1 ]
        include:
          - os: macos-latest
            ocamlv: 4.11.1
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache
      uses: actions/cache@v2
      with:
        path: .cache/local/bin
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh') }}
    - name: Building ocaml ${{ matrix.ocamlv }} cache
      if: steps.ocaml-cache.outputs.cache-hit != 'true'
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml

  archives-cache:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: src ext archives cache
      id: archives
      uses: actions/cache@v2
      with:
        path: src_ext/archives
        key: archives-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}
    - name: Retrieve archives
      if: steps.archives.outputs.cache-hit != 'true'
      run: |#bash -exu .github/scripts/caches.sh archives
        rm -rf src_ext/archives
        export PATH=.cache/local/bin:$PATH
        which ocaml || export OCAML=`which ocaml`
        make -C src_ext cache-archives
        ls src_ext/archives -al

####
# Build
####
  build:
    needs: [ ocaml-cache ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        ocamlv: [ 4.11.1 ]
        include:
          - os: macos-latest
            ocamlv: 4.11.1
      fail-fast: false
    steps:
    - name: install deps
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt install bubblewrap
    - uses: actions/checkout@v2
    - name: ocaml ${{ matrix.ocamlv }} cache
      uses: actions/cache@v2
      with:
        path: .cache/local/bin
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh') }}
    - name: Build
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/build.sh

####
# Opam tests
####
  test:
    needs: [ archives-cache ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        ocamlv: [ 4.11.1 ]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: install deps
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: sudo apt install bubblewrap
    - name: ocaml ${{ matrix.ocamlv }} cache
      id: ocaml-cache-test
      uses: actions/cache@v2
      with:
        path: .cache/local/bin
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh') }}-test
    - name: Building ocaml ${{ env.OCAML_VERSION }} cache
      if: steps.ocaml-cache-test.outputs.cache-hit != 'true'
      env:
        OPAM_TEST: 1
        OCAML_VERSION: ${{ matrix.ocamlv }}
      run: bash -exu .github/scripts/ocaml-cache.sh ocaml
    - name: opam bootstrap cache
      id: opam-bootstrap
      uses: actions/cache@v2
      with:
        path: ${{ env.OPAMBSROOT }}
        key: opam-${{ env.OPAMBSVERSION }}-${{ env.OPAM_REPO_SHA }}-${{ hashFiles ('.github/scripts/opam-bs-cache.sh') }}
    - name: opam root cache
      if: steps.opam-bootstrap.outputs.cache-hit != 'true'
      env:
        OPAM_TEST: 1
      run: bash -exu .github/scripts/opam-bs-cache.sh
    - name: Test
      env:
        OCAML_VERSION: ${{ matrix.ocamlv }}
        OPAM_TEST: 1
      run: bash -exu .github/scripts/build.sh

  cold:
    needs: [ archives-cache ]
    runs-on: ubuntu-latest
    steps:
    - name: install deps
      run: sudo apt install bubblewrap
    - uses: actions/checkout@v2
    - name: src ext archives cache
      uses: actions/cache@v2
      with:
        path: src_ext/archives
        key: archives-${{ hashFiles('src_ext/Makefile.sources', 'src_ext/Makefile') }}
    - name: prepare compiler
      run: |
        make compiler
        make lib-pkg
    - name: Cold
      env:
        OCAML_VERSION: ${{ env.OCAML_VERSION }}
        OPAM_COLD: 1
      run: bash -exu .github/scripts/build.sh

  upgrade:
    needs: [ ocaml-cache ]
    runs-on: ubuntu-latest
    steps:
    - name: install deps
      run: sudo apt install bubblewrap
    - uses: actions/checkout@v2
    - name: opam 1.2 root cache
      uses: actions/cache@v2
      with:
        path: ${{ env.OPAM12CACHE }}
        key: opam1.2
    - name: ocaml ${{ env.OCAML_VERSION }} cache
      uses: actions/cache@v2
      with:
        path: .cache/local/bin
        key: ${{ runner.os }}-ocaml-${{ matrix.ocamlv }}-${{ hashFiles ('.github/scripts/ocaml-cache.sh') }}
    - name: Upgrade
      env:
        OCAML_VERSION: ${{ env.OCAML_VERSION }}
        OPAM_UPGRADE: 1
      run: bash -exu .github/scripts/build.sh
