N0REP0
### <pkg:foo.1>
opam-version: "2.0"
### <pkg:foo.2>
opam-version: "2.0"
### <pkg:bar.1>
opam-version: "2.0"
### <pkg:bar.3>
opam-version: "2.0"
### <pkg:baz.1>
opam-version: "2.0"
### <pkg:qux.1>
opam-version: "2.0"
### <pin:tolock/tolock.opam>
opam-version: "2.0"
depends: [ "foo" "bar" ]
build: [ "test" "-f" "content" ]
### <tolock/content>
it's here
### OPAMYES=1
### : simple lock file :
### opam switch create locking --empty
### opam pin -n ./tolock --with-version 1
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to file://${BASEDIR}/tolock (version 1)
### opam lock tolock
[ERROR] Skipping tolock.1, dependencies are not satisfied in this switch, not installed packages are:
          - foo
          - bar

No lock file generated
### opam install foo.1
The following actions will be performed:
=== install 1 package
  - install foo 1

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed foo.1
Done.
### opam lock tolock
[ERROR] Skipping tolock.1, dependencies are not satisfied in this switch, not installed packages are:
          - bar

No lock file generated
### opam install bar.1
The following actions will be performed:
=== install 1 package
  - install bar 1

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed bar.1
Done.
### opam lock tolock
Generated lock files for:
  - tolock.1: ${BASEDIR}/tolock.opam.locked
### opam-cat tolock.opam.locked
authors: "the testing team"
bug-reports: "https://nobug"
build: ["test" "-f" "content"]
depends: ["bar" {= "1"} "foo" {= "1"}]
description: "Two words."
dev-repo: "hg+https://pkg@op.am"
homepage: "egapemoh"
license: "MIT"
maintainer: "maint@tain.er"
name: "tolock"
opam-version: "2.0"
synopsis: "A word"
version: "1"
url {
src: "file://${BASEDIR}/tolock"
}
### opam lock tolock --lock-suffix new
Generated lock files for:
  - tolock.1: ${BASEDIR}/tolock.opam.new
### opam show --just-file --normalise ./tolock.opam.new --field depends,depopts,conflicts
depends:   ["bar" {= "1"} "foo" {= "1"}]
depopts:
conflicts:
### <pin:tolock/tolock.opam>
opam-version: "2.0"
depends: [ "foo" "bar" ]
depopts: "baz"
build: [ "test" "-f" "content" ]
### opam update tolock

<><> Synchronising development packages <><><><><><><><><><><><><><><><><><><><>
[tolock.1] synchronised (file://${BASEDIR}/tolock)
[tolock] Installing new package description from upstream file://${BASEDIR}/tolock
Now run 'opam upgrade' to apply any package updates.
### opam lock tolock
Generated lock files for:
  - tolock.1: ${BASEDIR}/tolock.opam.locked
### opam show --just-file --normalise ./tolock.opam.locked --field depends,depopts,conflicts
depends:   ["bar" {= "1"} "foo" {= "1"}]
depopts:
conflicts: ["baz"]
### opam install baz.1
The following actions will be performed:
=== install 1 package
  - install baz 1

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed baz.1
Done.
### opam lock tolock
Generated lock files for:
  - tolock.1: ${BASEDIR}/tolock.opam.locked
### opam show --just-file --normalise ./tolock.opam.locked --field depends,depopts,conflicts
depends:   ["bar" {= "1"} "baz" {= "1"} "foo" {= "1"}]
depopts:
conflicts:
### : error or formulaes :
### ### ERROR ###
### <pin:tolock/tolock.opam>
opam-version: "2.0"
depends: [ "foo" ("bar" | "qux") ]
depopts: "baz"
build: [ "test" "-f" "content" ]
### opam lock tolock
[ERROR] Skipping tolock.1, dependencies are not satisfied in this switch, not installed packages are:
          - qux

No lock file generated
### opam show --just-file --normalise ./tolock.opam.locked --field depends,depopts,conflicts
depends:   ["bar" {= "1"} "baz" {= "1"} "foo" {= "1"}]
depopts:
conflicts:
### : lock file install from directory :
### mv tolock.opam.locked ./tolock/
### opam switch create locking2 --empty
### opam-cat tolock/tolock.opam.locked
authors: "the testing team"
bug-reports: "https://nobug"
build: ["test" "-f" "content"]
depends: ["bar" {= "1"} "baz" {= "1"} "foo" {= "1"}]
description: "Two words."
dev-repo: "hg+https://pkg@op.am"
homepage: "egapemoh"
license: "MIT"
maintainer: "maint@tain.er"
name: "tolock"
opam-version: "2.0"
synopsis: "A word"
version: "1"
url {
src: "file://${BASEDIR}/tolock"
}
### opam pin -n ./tolock --locked
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to file://${BASEDIR}/tolock (version 1)
### opam show --normalise tolock --field depends:,depopts:,conflicts:
depends:   ["bar" {= "1"} "baz" {= "1"} "foo" {= "1"}]
depopts:
conflicts:
### opam unpin -n tolock
Ok, tolock is no longer pinned to file://${BASEDIR}/tolock (version 1)
### opam install ./tolock --show
The following actions would be performed:
=== install 3 packages
  - install bar    3   [required by tolock]
  - install foo    2   [required by tolock]
  - install tolock dev
### # ERROR
### opam install ./tolock --locked --show
The following actions would be performed:
=== install 4 packages
  - install bar    1 [required by tolock]
  - install baz    1 [required by tolock]
  - install foo    1 [required by tolock]
  - install tolock 1
### : install with filename :
### opam install ./tolock/tolock.opam --show
The following actions would be performed:
=== install 3 packages
  - install bar    3   [required by tolock]
  - install foo    2   [required by tolock]
  - install tolock dev
### opam install ./tolock/tolock.opam --locked --show
The following actions would be performed:
=== install 3 packages
  - install bar    3   [required by tolock]
  - install foo    2   [required by tolock]
  - install tolock dev
### opam install ./tolock/tolock.opam --locked
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to file://${BASEDIR}/tolock (version dev)
The following actions will be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed bar.3
-> installed foo.2
-> retrieved tolock.dev  (file://${BASEDIR}/tolock)
-> installed tolock.dev
Done.
### : subdirectories :
### opam remove tolock
The following actions will be performed:
=== remove 1 package
  - remove tolock dev (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   tolock.dev
Done.
### <pin:old1/opam/oldlock.opam>
opam-version: "2.0"
depends: "foo"
### opam install foo.1
The following actions will be performed:
=== downgrade 1 package
  - downgrade foo 2 to 1

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   foo.2
-> installed foo.1
Done.
### opam pin -n old1
Package oldlock does not exist, create as a NEW package? [y/n] y
oldlock is now pinned to file://${BASEDIR}/old1 (version dev)
### opam lock oldlock
Generated lock files for:
  - oldlock.dev: ${BASEDIR}/oldlock.opam.locked
### opam show ./oldlock.opam.locked --just-file --normalise --field name,version,depends,depopts,conflicts
name:      "oldlock"
version:   "dev"
depends:   ["foo" {= "1"}]
depopts:
conflicts:
### mv oldlock.opam.locked old1/opam/oldlock.opam.locked
### opam install foo.2
The following actions will be performed:
=== upgrade 1 package
  - upgrade foo 1 to 2

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   foo.1
-> installed foo.2
Done.
### opam install --show --locked oldlock

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[oldlock.dev] synchronised (file://${BASEDIR}/old1)
[oldlock] Installing new package description from upstream file://${BASEDIR}/old1

The following actions would be performed:
=== downgrade 1 package
  - downgrade foo     2 to 1       [required by oldlock]
=== install 1 package
  - install   oldlock dev (pinned)
### opam install --locked oldlock

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[oldlock.dev] synchronised (no changes)

The following actions will be performed:
=== downgrade 1 package
  - downgrade foo     2 to 1       [required by oldlock]
=== install 1 package
  - install   oldlock dev (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   foo.2
-> installed foo.1
-> installed oldlock.dev
Done.
### opam remove oldlock
The following actions will be performed:
=== remove 1 package
  - remove oldlock dev (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   oldlock.dev
Done.
### <pin:old2/opam/granpa.opam/opam>
opam-version: "2.0"
depends: "foo"
### opam pin -n old2
Package granpa does not exist, create as a NEW package? [y/n] y
granpa is now pinned to file://${BASEDIR}/old2 (version opam)
### opam lock granpa
Generated lock files for:
  - granpa.opam: ${BASEDIR}/granpa.opam.locked
### opam show ./granpa.opam.locked --just-file --normalise --field name,version,depends,depopts,conflicts
name:      "granpa"
version:   "opam"
depends:   ["foo" {= "1"}]
depopts:
conflicts:
### mv granpa.opam.locked old2/opam/granpa.opam/opam.locked
### opam install foo.2
The following actions will be performed:
=== upgrade 1 package
  - upgrade foo 1 to 2

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   foo.1
-> installed foo.2
Done.
### opam install --show --locked granpa

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[granpa.opam] synchronised (file://${BASEDIR}/old2)
[granpa] Installing new package description from upstream file://${BASEDIR}/old2

The following actions would be performed:
=== downgrade 1 package
  - downgrade foo    2 to 1        [required by granpa]
=== install 1 package
  - install   granpa opam (pinned)
### opam install --locked granpa

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[granpa.opam] synchronised (no changes)

The following actions will be performed:
=== downgrade 1 package
  - downgrade foo    2 to 1        [required by granpa]
=== install 1 package
  - install   granpa opam (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   foo.2
-> installed foo.1
-> installed granpa.opam
Done.
### opam remove granpa
The following actions will be performed:
=== remove 1 package
  - remove granpa opam (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   granpa.opam
Done.
### <pin:old3/ancestor.opam/opam>
opam-version: "2.0"
depends: "foo"
### opam pin -n old3
Package ancestor does not exist, create as a NEW package? [y/n] y
ancestor is now pinned to file://${BASEDIR}/old3 (version opam)
### opam lock ancestor
Generated lock files for:
  - ancestor.opam: ${BASEDIR}/ancestor.opam.locked
### opam show ./ancestor.opam.locked --just-file --normalise --field name,version,depends,depopts,conflicts
name:      "ancestor"
version:   "opam"
depends:   ["foo" {= "1"}]
depopts:
conflicts:
### mv ancestor.opam.locked old3/ancestor.opam/opam.locked
### opam install foo.2
The following actions will be performed:
=== upgrade 1 package
  - upgrade foo 1 to 2

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   foo.1
-> installed foo.2
Done.
### opam install --show --locked ancestor

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[ancestor.opam] synchronised (file://${BASEDIR}/old3)
[ancestor] Installing new package description from upstream file://${BASEDIR}/old3

The following actions would be performed:
=== downgrade 1 package
  - downgrade foo      2 to 1        [required by ancestor]
=== install 1 package
  - install   ancestor opam (pinned)
### opam install --locked ancestor

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[ancestor.opam] synchronised (no changes)

The following actions will be performed:
=== downgrade 1 package
  - downgrade foo      2 to 1        [required by ancestor]
=== install 1 package
  - install   ancestor opam (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   foo.2
-> installed foo.1
-> installed ancestor.opam
Done.
### opam remove ancestor
The following actions will be performed:
=== remove 1 package
  - remove ancestor opam (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   ancestor.opam
Done.
### <pin:old/opam/opam>
opam-version: "2.0"
name: "silver"
depends: "foo"
### # ERROR double silver
### opam pin -n old
This will pin the following packages: silver, silver. Continue? [y/n] y
Package silver does not exist, create as a NEW package? [y/n] y
silver is now pinned to file://${BASEDIR}/old (version dev)
[NOTE] Package silver is already pinned to file://${BASEDIR}/old (version dev).
silver is now pinned to file://${BASEDIR}/old (version dev)
### opam lock silver
Generated lock files for:
  - silver.dev: ${BASEDIR}/silver.opam.locked
### opam show ./silver.opam.locked --just-file --normalise --field name,version,depends,depopts,conflicts
name:      "silver"
version:   "dev"
depends:   ["foo" {= "1"}]
depopts:
conflicts:
### mv silver.opam.locked old/opam/opam.locked
### opam install foo.2
The following actions will be performed:
=== upgrade 1 package
  - upgrade foo 1 to 2

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   foo.1
-> installed foo.2
Done.
### opam install --show --locked silver

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[silver.dev] synchronised (file://${BASEDIR}/old)
[silver] Installing new package description from upstream file://${BASEDIR}/old

The following actions would be performed:
=== downgrade 1 package
  - downgrade foo    2 to 1       [required by silver]
=== install 1 package
  - install   silver dev (pinned)
### opam install --locked silver

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[silver.dev] synchronised (no changes)

The following actions will be performed:
=== downgrade 1 package
  - downgrade foo    2 to 1       [required by silver]
=== install 1 package
  - install   silver dev (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   foo.2
-> installed foo.1
-> installed silver.dev
Done.
### opam remove silver
The following actions will be performed:
=== remove 1 package
  - remove silver dev (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   silver.dev
Done.
### : interdependant locks :
### <pkg:dep-foo.1>
opam-version: "2.0"
### <pkg:dep-baz.2>
opam-version: "2.0"
### <pkg:dep-quux.3>
opam-version: "2.0"
### <pkg:dep-corge.4>
opam-version: "2.0"
### opam switch create interdep --empty
### <pin:interlock/foo.opam>
version: "pinned"
depends: "dep-foo"
### <pin:interlock/bar.opam>
version: "pinned"
depends: "foo"
### <pin:interlock/baz.opam>
version: "pinned"
depends: [ "bar" "dep-baz" ]
### <pin:interlock/qux.opam>
version: "pinned"
### <pin:interlock/quux.opam>
version: "pinned"
depends: "dep-quux"
### <pin:interlock/corge.opam>
version: "pinned"
depends: [ "quux" "dep-corge" ]
### opam install ./interlock --deps-only
The following actions will be performed:
=== install 4 packages
  - install dep-baz   2 [required by baz]
  - install dep-corge 4 [required by corge]
  - install dep-foo   1 [required by foo]
  - install dep-quux  3 [required by quux]

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed dep-baz.2
-> installed dep-corge.4
-> installed dep-foo.1
-> installed dep-quux.3
Done.
### opam remove dep-quux dep-corge
The following actions will be performed:
=== remove 2 packages
  - remove dep-corge 4
  - remove dep-quux  3

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   dep-corge.4
-> removed   dep-quux.3
Done.
### opam lock ./interlock
[ERROR] Skipping corge.pinned, dependencies are not satisfied in this switch, not installed packages are:
          - dep-corge

[ERROR] Skipping quux.pinned, dependencies are not satisfied in this switch, not installed packages are:
          - dep-quux

Generated lock files for:
  - qux.pinned: ${BASEDIR}/qux.opam.locked
  - foo.pinned: ${BASEDIR}/foo.opam.locked
  - baz.pinned: ${BASEDIR}/baz.opam.locked
  - bar.pinned: ${BASEDIR}/bar.opam.locked
### opam show --just-file  --normalise ./foo.opam.locked -f version,depends
version: "pinned"
depends: ["dep-foo" {= "1"}]
### opam show --just-file  --normalise ./bar.opam.locked -f version,depends
version: "pinned"
depends: ["dep-foo" {= "1"} "foo" {= "pinned"}]
### opam show --just-file  --normalise ./baz.opam.locked -f version,depends
version: "pinned"
depends: ["bar" {= "pinned"} "dep-baz" {= "2"} "dep-foo" {= "1"} "foo" {= "pinned"}]
### opam show --just-file  --normalise ./qux.opam.locked -f version,depends
version: "pinned"
depends:
### : pin scan :
### <pin:tolock-scan/tolock-scan.opam>
version: "default-version"
### <pin:tolock-scan/tolock-scan.opam.locked>
version: "locked-version"
### # ERROR
### opam pin scan ./tolock-scan --locked | grep -v '# Name'
tolock-scan  locked-version  file://${BASEDIR}/tolock-scan  -
### : git pin with lock file :
### git -C tolock init -q
### git -C tolock config core.autocrlf false
### git -C tolock add content
### git -C tolock commit -qm "init"
### opam switch create locking3 --empty
### opam pin -n ./tolock --locked
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to git+file://${BASEDIR}/tolock#master (version 1)
### opam show --normalise tolock --field depends:,depopts:,conflicts:
depends:   ["bar" {= "1"} "baz" {= "1"} "foo" {= "1"}]
depopts:
conflicts:
### opam unpin -n tolock
Ok, tolock is no longer pinned to git+file://${BASEDIR}/tolock#master (version 1)
### # ERROR
### opam install ./tolock --show
The following actions would be performed:
=== install 3 packages
  - install bar    3   [required by tolock]
  - install foo    2   [required by tolock]
  - install tolock dev
### # ERROR
### opam install ./tolock --locked --show
The following actions would be performed:
=== install 4 packages
  - install bar    1 [required by tolock]
  - install baz    1 [required by tolock]
  - install foo    1 [required by tolock]
  - install tolock 1
### opam pin ./tolock -n
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to git+file://${BASEDIR}/tolock#master (version dev)
### opam install ./tolock --show
The following actions would be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)
### # ERROR
### opam install ./tolock --locked --show
The following actions would be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)
### # ERROR
### opam install ./tolock --locked
[NOTE] Ignoring uncommitted changes in ${BASEDIR}/tolock (`--working-dir' not active).
[tolock.dev] synchronised (no changes)
The following actions will be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed bar.3
-> installed foo.2
-> retrieved tolock.dev  (no changes)
-> installed tolock.dev
Done.
### : git pin with opam file committed :
### git -C tolock add tolock.opam
### git -C tolock commit -qm "opam file"
### opam switch create locking4 --empty
### opam pin -n ./tolock --locked
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to git+file://${BASEDIR}/tolock#master (version 1)
### opam show --normalise tolock --field depends:,depopts:,conflicts:
depends:   ["bar" {= "1"} "baz" {= "1"} "foo" {= "1"}]
depopts:
conflicts:
### opam unpin -n tolock
Ok, tolock is no longer pinned to git+file://${BASEDIR}/tolock#master (version 1)
### # ERROR
### opam install ./tolock --show
The following actions would be performed:
=== install 3 packages
  - install bar    3   [required by tolock]
  - install foo    2   [required by tolock]
  - install tolock dev
### # ERROR
### opam install ./tolock --locked --show
The following actions would be performed:
=== install 4 packages
  - install bar    1 [required by tolock]
  - install baz    1 [required by tolock]
  - install foo    1 [required by tolock]
  - install tolock 1
### opam pin ./tolock -n
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to git+file://${BASEDIR}/tolock#master (version dev)
### opam install ./tolock --show
The following actions would be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)
### # ERROR
### opam install ./tolock --locked --show
The following actions would be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)
### # ERROR
### opam install ./tolock --locked
[NOTE] Ignoring uncommitted changes in ${BASEDIR}/tolock (`--working-dir' not active).
[tolock.dev] synchronised (no changes)
The following actions will be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed bar.3
-> installed foo.2
-> retrieved tolock.dev  (no changes)
-> installed tolock.dev
Done.
### : git pin with lock file committed :
### git -C tolock add tolock.opam.locked
### git -C tolock commit -qm "lock"
### opam switch create locking5 --empty
### opam pin -n ./tolock --locked
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to git+file://${BASEDIR}/tolock#master (version 1)
### opam show --normalise tolock --field depends:,depopts:,conflicts:
depends:   ["bar" {= "1"} "baz" {= "1"} "foo" {= "1"}]
depopts:
conflicts:
### opam unpin -n tolock
Ok, tolock is no longer pinned to git+file://${BASEDIR}/tolock#master (version 1)
### # ERROR
### opam install ./tolock --show
The following actions would be performed:
=== install 3 packages
  - install bar    3   [required by tolock]
  - install foo    2   [required by tolock]
  - install tolock dev
### # ERROR
### opam install ./tolock --locked --show
The following actions would be performed:
=== install 4 packages
  - install bar    1 [required by tolock]
  - install baz    1 [required by tolock]
  - install foo    1 [required by tolock]
  - install tolock 1
### opam pin ./tolock -n
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to git+file://${BASEDIR}/tolock#master (version dev)
### opam install ./tolock --show
The following actions would be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)
### # ERROR
### opam install ./tolock --locked --show
The following actions would be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)
### # ERROR
### opam install ./tolock --locked
[tolock.dev] synchronised (no changes)
The following actions will be performed:
=== install 3 packages
  - install bar    3            [required by tolock]
  - install foo    2            [required by tolock]
  - install tolock dev (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed bar.3
-> installed foo.2
-> retrieved tolock.dev  (no changes)
-> installed tolock.dev
Done.
### : check no repin in case of double 'install .' - with locked :
### opam unpin tolock
Ok, tolock is no longer pinned to git+file://${BASEDIR}/tolock#master (version dev)
The following actions will be performed:
=== remove 1 package
  - remove tolock dev

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   tolock.dev
Done.
### opam install ./tolock --locked
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to git+file://${BASEDIR}/tolock#master (version 1)
The following actions will be performed:
=== downgrade 2 packages
  - downgrade bar    3 to 1     [required by tolock]
  - downgrade foo    2 to 1     [required by tolock]
=== install 2 packages
  - install   baz    1          [required by tolock]
  - install   tolock 1 (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   bar.3
-> removed   foo.2
-> installed bar.1
-> installed baz.1
-> installed foo.1
-> retrieved tolock.1  (git+file://${BASEDIR}/tolock#master)
-> installed tolock.1
Done.
### opam remove tolock
The following actions will be performed:
=== remove 1 package
  - remove tolock 1 (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> removed   tolock.1
Done.
### # ERROR double pin
### opam install ./tolock --locked
[tolock.1] synchronised (no changes)
The following actions will be performed:
=== install 1 package
  - install tolock 1 (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed tolock.1
Done.
### : upgrade with lock :
### opam switch remove locking
Switch locking and all its packages will be wiped. Are you sure? [y/n] y
### opam switch create locking --empty
### rm -rf tolock
### <pin:tolock/tolock.opam>
build: [ "false" ]
version: "1"
### <pin:tolock/tolock.opam.locked>
version: "l1"
### opam pin ./tolock --locked
Package tolock does not exist, create as a NEW package? [y/n] y
tolock is now pinned to file://${BASEDIR}/tolock (version l1)

The following actions will be performed:
=== install 1 package
  - install tolock l1 (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> installed tolock.l1
Done.
### <pin:tolock/tolock.opam.locked>
version: "l2"
### opam update tolock

<><> Synchronising development packages <><><><><><><><><><><><><><><><><><><><>
[tolock.l1] synchronised (file://${BASEDIR}/tolock)
[tolock] Conflicting update of the metadata from file://${BASEDIR}/tolock.
Override files in ${BASEDIR}/OPAM/locking/.opam-switch/overlay/tolock (there will be a backup)? [y/n] y
User metadata backed up in ${BASEDIR}/OPAM/backup/tolock.bak
Now run 'opam upgrade' to apply any package updates.
### opam show tolock --field=version,build --normalise
version l2
build
### opam upgrade tolock

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[tolock.l2] synchronised (no changes)

The following actions will be performed:
=== upgrade 1 package
  - upgrade tolock l1 to l2 (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> retrieved tolock.l2  (file://${BASEDIR}/tolock)
-> removed   tolock.l1
-> installed tolock.l2
Done.
### <pin:tolock/tolock.opam>
build: [ "false" ]
version: "3"
### <pin:tolock/tolock.opam.locked>
version: "l3"
build: [ "echo" "locked" ]
### opam update tolock

<><> Synchronising development packages <><><><><><><><><><><><><><><><><><><><>
[tolock.l2] synchronised (file://${BASEDIR}/tolock)
[tolock] Conflicting update of the metadata from file://${BASEDIR}/tolock.
Override files in ${BASEDIR}/OPAM/locking/.opam-switch/overlay/tolock (there will be a backup)? [y/n] y
User metadata backed up in ${BASEDIR}/OPAM/backup/tolock.bak
Now run 'opam upgrade' to apply any package updates.
### opam show tolock --field=version,build --normalise
version l3
build   ["echo" "locked"]
### opam upgrade
The following actions will be performed:
=== upgrade 1 package
  - upgrade tolock l2 to l3 (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> retrieved tolock.l3  (file://${BASEDIR}/tolock)
-> removed   tolock.l2
-> installed tolock.l3
Done.
### <pin:tolock/tolock.opam>
build: [ "false" ]
version: "4"
### <pin:tolock/tolock.opam.locked>
version: "l4"
### opam update tolock

<><> Synchronising development packages <><><><><><><><><><><><><><><><><><><><>
[tolock.l3] synchronised (file://${BASEDIR}/tolock)
[tolock] Conflicting update of the metadata from file://${BASEDIR}/tolock.
Override files in ${BASEDIR}/OPAM/locking/.opam-switch/overlay/tolock (there will be a backup)? [y/n] y
User metadata backed up in ${BASEDIR}/OPAM/backup/tolock.bak
Now run 'opam upgrade' to apply any package updates.
### opam show tolock --field=version,build --normalise
version l4
build
### opam upgrade
The following actions will be performed:
=== upgrade 1 package
  - upgrade tolock l3 to l4 (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> retrieved tolock.l4  (file://${BASEDIR}/tolock)
-> removed   tolock.l3
-> installed tolock.l4
Done.
### <pin:tolock/tolock.opam.locked>
version: "l5"
build: [ "sh" "install.sh" ]
### <tolock/install.sh>
echo "lib: [" > tolock.install
for i in `ls files`; do
  echo "\"files/$i\"" >> tolock.install
done
echo "]" >> tolock.install
### opam upgrade tolock

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[tolock.l4] synchronised (file://${BASEDIR}/tolock)
[tolock] Conflicting update of the metadata from file://${BASEDIR}/tolock.
Override files in ${BASEDIR}/OPAM/locking/.opam-switch/overlay/tolock (there will be a backup)? [y/n] y
User metadata backed up in ${BASEDIR}/OPAM/backup/tolock.bak

The following actions will be performed:
=== upgrade 1 package
  - upgrade tolock l4 to l5 (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> retrieved tolock.l5  (file://${BASEDIR}/tolock)
-> removed   tolock.l4
-> installed tolock.l5
Done.
### opam list --all --installed --columns=name,installed-files --normalise
# Packages matching: any & installed
# Name # Installed files
tolock
### <tolock/files/fichier>
content
### opam update

<><> Updating package repositories ><><><><><><><><><><><><><><><><><><><><><><>
[default] no changes from file://${BASEDIR}/REPO

<><> Synchronising development packages <><><><><><><><><><><><><><><><><><><><>
[tolock.l5] synchronised (file://${BASEDIR}/tolock)
Now run 'opam upgrade' to apply any package updates.
### opam upgrade
The following actions will be performed:
=== recompile 1 package
  - recompile tolock l5 (pinned) [upstream or system changes]

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> retrieved tolock.l5  (no changes)
-> removed   tolock.l5
-> installed tolock.l5
Done.
### opam list --all --installed --columns=name,installed-files --normalise
# Packages matching: any & installed
# Name # Installed files
tolock ${BASEDIR}/OPAM/locking/lib/tolock ${BASEDIR}/OPAM/locking/lib/tolock/fichier
### <tolock/files/warka>
content
### opam update --dev

<><> Synchronising development packages <><><><><><><><><><><><><><><><><><><><>
[tolock.l5] synchronised (file://${BASEDIR}/tolock)
Now run 'opam upgrade' to apply any package updates.
### opam upgrade tolock

<><> Synchronising pinned packages ><><><><><><><><><><><><><><><><><><><><><><>
[tolock.l5] synchronised (no changes)

The following actions will be performed:
=== recompile 1 package
  - recompile tolock l5 (pinned)

<><> Processing actions <><><><><><><><><><><><><><><><><><><><><><><><><><><><>
-> retrieved tolock.l5  (no changes)
-> removed   tolock.l5
-> installed tolock.l5
Done.
### opam list --all --installed --columns=name,installed-files --normalise
# Packages matching: any & installed
# Name # Installed files
tolock ${BASEDIR}/OPAM/locking/lib/tolock ${BASEDIR}/OPAM/locking/lib/tolock/fichier ${BASEDIR}/OPAM/locking/lib/tolock/warka
